<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" retried="2" total="10" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="195463" started-at="2021-09-10T11:21:16 IST" finished-at="2021-09-10T11:24:32 IST">
    <groups>
      <group name="regressionTest">
        <method signature="ConvertLeadTest.convertLeadBySelectingAllCheckboxTest()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="convertLeadBySelectingAllCheckboxTest" class="com.rockzent.awinbv.leadtest.ConvertLeadTest"/>
        <method signature="ConvertLeadTest.convertLeadBySelectingOnlyOpportunityCheckboxTest()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="convertLeadBySelectingOnlyOpportunityCheckboxTest" class="com.rockzent.awinbv.leadtest.ConvertLeadTest"/>
        <method signature="ConvertLeadTest.convertLeadBySelectingOnlyOrgCheckboxTest()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="convertLeadBySelectingOnlyOrgCheckboxTest" class="com.rockzent.awinbv.leadtest.ConvertLeadTest"/>
        <method signature="CreateNewLeadTest.creatNewLeadByInvalidAnnualRevenueTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="creatNewLeadByInvalidAnnualRevenueTest" class="com.rockzent.awinbv.leadtest.CreateNewLeadTest"/>
        <method signature="CreateNewLeadTest.creatNewLeadByValidAnnualRevenueTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="creatNewLeadByValidAnnualRevenueTest" class="com.rockzent.awinbv.leadtest.CreateNewLeadTest"/>
        <method signature="CreateNewLeadTest.createNewLeadByAssignToTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="createNewLeadByAssignToTest" class="com.rockzent.awinbv.leadtest.CreateNewLeadTest"/>
      </group> <!-- regressionTest -->
      <group name="smokeTest">
        <method signature="CreateNewLeadTest.createNewLeadByAssignToTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="createNewLeadByAssignToTest" class="com.rockzent.awinbv.leadtest.CreateNewLeadTest"/>
      </group> <!-- smokeTest -->
    </groups>
    <test name="Command line test" duration-ms="195463" started-at="2021-09-10T11:21:16 IST" finished-at="2021-09-10T11:24:32 IST">
      <class name="com.rockzent.awinbv.leadtest.CreateNewLeadTest">
        <test-method status="PASS" signature="configBC()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configBC" is-config="true" duration-ms="3431" started-at="2021-09-10T11:23:18 IST" finished-at="2021-09-10T11:23:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configBM" is-config="true" duration-ms="2751" started-at="2021-09-10T11:23:22 IST" finished-at="2021-09-10T11:23:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="SKIP" signature="creatNewLeadByInvalidAnnualRevenueTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="creatNewLeadByInvalidAnnualRevenueTest" duration-ms="10041" retried="true" started-at="2021-09-10T11:23:24 IST" finished-at="2021-09-10T11:23:34 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.rockzent.awinbv.leadtest.CreateNewLeadTest.creatNewLeadByInvalidAnnualRevenueTest(CreateNewLeadTest.java:151)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatNewLeadByInvalidAnnualRevenueTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configAM" is-config="true" duration-ms="1321" started-at="2021-09-10T11:23:34 IST" finished-at="2021-09-10T11:23:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configBM" is-config="true" duration-ms="2373" started-at="2021-09-10T11:23:36 IST" finished-at="2021-09-10T11:23:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="SKIP" signature="creatNewLeadByInvalidAnnualRevenueTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="creatNewLeadByInvalidAnnualRevenueTest" duration-ms="9771" retried="true" started-at="2021-09-10T11:23:38 IST" finished-at="2021-09-10T11:23:48 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.rockzent.awinbv.leadtest.CreateNewLeadTest.creatNewLeadByInvalidAnnualRevenueTest(CreateNewLeadTest.java:151)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatNewLeadByInvalidAnnualRevenueTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configAM" is-config="true" duration-ms="1401" started-at="2021-09-10T11:23:48 IST" finished-at="2021-09-10T11:23:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configBM" is-config="true" duration-ms="2416" started-at="2021-09-10T11:23:49 IST" finished-at="2021-09-10T11:23:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="FAIL" signature="creatNewLeadByInvalidAnnualRevenueTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="creatNewLeadByInvalidAnnualRevenueTest" duration-ms="9865" started-at="2021-09-10T11:23:52 IST" finished-at="2021-09-10T11:24:02 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.rockzent.awinbv.leadtest.CreateNewLeadTest.creatNewLeadByInvalidAnnualRevenueTest(CreateNewLeadTest.java:151)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatNewLeadByInvalidAnnualRevenueTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configAM" is-config="true" duration-ms="1417" started-at="2021-09-10T11:24:02 IST" finished-at="2021-09-10T11:24:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configBM" is-config="true" duration-ms="2280" started-at="2021-09-10T11:24:03 IST" finished-at="2021-09-10T11:24:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="creatNewLeadByValidAnnualRevenueTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="creatNewLeadByValidAnnualRevenueTest" duration-ms="10170" started-at="2021-09-10T11:24:06 IST" finished-at="2021-09-10T11:24:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatNewLeadByValidAnnualRevenueTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configAM" is-config="true" duration-ms="1404" started-at="2021-09-10T11:24:16 IST" finished-at="2021-09-10T11:24:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configBM" is-config="true" duration-ms="2320" started-at="2021-09-10T11:24:17 IST" finished-at="2021-09-10T11:24:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="createNewLeadByAssignToTest()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="createNewLeadByAssignToTest" duration-ms="10130" started-at="2021-09-10T11:24:19 IST" finished-at="2021-09-10T11:24:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewLeadByAssignToTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configAM" is-config="true" duration-ms="1397" started-at="2021-09-10T11:24:30 IST" finished-at="2021-09-10T11:24:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configAC()[pri:0, instance:com.rockzent.awinbv.leadtest.CreateNewLeadTest@3d99d22e]" name="configAC" is-config="true" duration-ms="759" started-at="2021-09-10T11:24:31 IST" finished-at="2021-09-10T11:24:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.rockzent.awinbv.leadtest.CreateNewLeadTest -->
      <class name="com.rockzent.awinbv.leadtest.ConvertLeadTest">
        <test-method status="PASS" signature="configBS()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configBS" is-config="true" duration-ms="14" started-at="2021-09-10T11:21:16 IST" finished-at="2021-09-10T11:21:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method status="PASS" signature="configBC()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configBC" is-config="true" duration-ms="4770" started-at="2021-09-10T11:21:16 IST" finished-at="2021-09-10T11:21:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configBM" is-config="true" duration-ms="2997" started-at="2021-09-10T11:21:21 IST" finished-at="2021-09-10T11:21:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="convertLeadBySelectingAllCheckboxTest()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="convertLeadBySelectingAllCheckboxTest" duration-ms="38068" started-at="2021-09-10T11:21:24 IST" finished-at="2021-09-10T11:22:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertLeadBySelectingAllCheckboxTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configAM" is-config="true" duration-ms="1311" started-at="2021-09-10T11:22:02 IST" finished-at="2021-09-10T11:22:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configBM" is-config="true" duration-ms="2384" started-at="2021-09-10T11:22:04 IST" finished-at="2021-09-10T11:22:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="convertLeadBySelectingOnlyOpportunityCheckboxTest()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="convertLeadBySelectingOnlyOpportunityCheckboxTest" duration-ms="32944" started-at="2021-09-10T11:22:06 IST" finished-at="2021-09-10T11:22:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertLeadBySelectingOnlyOpportunityCheckboxTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configAM" is-config="true" duration-ms="1433" started-at="2021-09-10T11:22:39 IST" finished-at="2021-09-10T11:22:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configBM" is-config="true" duration-ms="2246" started-at="2021-09-10T11:22:40 IST" finished-at="2021-09-10T11:22:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="convertLeadBySelectingOnlyOrgCheckboxTest()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="convertLeadBySelectingOnlyOrgCheckboxTest" duration-ms="33393" started-at="2021-09-10T11:22:43 IST" finished-at="2021-09-10T11:23:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertLeadBySelectingOnlyOrgCheckboxTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configAM" is-config="true" duration-ms="1447" started-at="2021-09-10T11:23:16 IST" finished-at="2021-09-10T11:23:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configAC()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configAC" is-config="true" duration-ms="769" started-at="2021-09-10T11:23:17 IST" finished-at="2021-09-10T11:23:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method status="PASS" signature="configAS()[pri:0, instance:com.rockzent.awinbv.leadtest.ConvertLeadTest@35d176f7]" name="configAS" is-config="true" duration-ms="0" started-at="2021-09-10T11:24:32 IST" finished-at="2021-09-10T11:24:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
      </class> <!-- com.rockzent.awinbv.leadtest.ConvertLeadTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
